!function(){function e(){return function(e){return"Canis familiaris"==e&&(e="Canis lupus familiaris"),e.replace(/ /g,"_").toLowerCase()}}function r(){return function(e){"canis_lupus_familiaris"==e&&(e="canis_familiaris");var r=e.replace(/_/g," ");return r=r.charAt(0).toUpperCase()+r.slice(1)}}function o(){return function(e){return"chr"+e.toString()}}function n(e,r){return{restrict:"E",scope:{genome:"=",chromosome:"=",start:"=",end:"=",tracks:"="},template:"<div class='wrap genoverse-wrap'>  <div id='genoverse'></div>  <div id='for-tracks'></div></div>",transclude:!0,controller:["$scope","$element","$attrs",function(o,n,t){function a(e){e=e.replace(/_/g," ");for(var r=0;r<genomes.length;r++){if(e.toLowerCase()==genomes[r].species.toLowerCase())return genomes[r];var o=[];if(genomes[r].synonyms.forEach(function(e){o.push(e.toLowerCase())}),o.indexOf(e.toLowerCase())>-1)return genomes[r]}return null}var s=this;s.trackConfigs=[],s.render=function(){var t=[Genoverse.Track.Scalebar];s.trackConfigs.forEach(function(e){t.push(s.parseTrackConfig(e))});var a={container:n.find("#genoverse"),width:$(".container").width(),urlParamTemplate:!1,chr:o.chromosome,start:o.start,end:o.end,species:o.genome.species,genome:e("urlencodeSpecies")(o.genome.species),plugins:["controlPanel","karyotype","resizer","fileDrop"],tracks:t};o.browser=new Genoverse(a),o.browser.on({afterInit:function(){o.genoverseToAngularWatches=s.setGenoverseToAngularWatches(),o.angularToGenoverseWatches=s.setAngularToGenoverseWatches(),r(angular.noop)},afterSetRange:function(){r(angular.noop)}})},s.pushTrackConfig=function(e){s.trackConfigs.push(e)},s.parseTrackConfig=function(e){console.log("parseTrackConfig trackConfig = ",e);var r=angular.element.extend({},e),o={};return o.url="function"==typeof r.url?r.url():r.url,delete r.url,r.modelExtra&&(angular.element.extend(o,e.modelExtra),delete r.modelExtra),r.model=r.model.extend(o),r.viewExtra&&(r.view=r.view.extend(viewExtra),delete r.viewExtra),r.controllerExtra&&(r.controller=r.controller.extend(controllerExtra),delete r.controllerExtra),r.extra&&(angular.element.extend(r,r.extra),delete r.extra),Genoverse.Track.extend(r)},s.setGenoverseToAngularWatches=function(){var e=o.$watch("browser.species",function(e,r){o.genome=a(e)}),r=o.$watch("browser.chr",function(e,r){o.chromosome=e}),n=o.$watch("browser.start",function(e,r){o.start=e}),t=o.$watch("browser.end",function(e,r){o.end=e});return[e,r,n,t]},s.setAngularToGenoverseWatches=function(){var e=o.$watch("start",function(e,r){angular.equals(e,r)||o.browser.moveTo(o.chromosome,e,o.end,!0)}),r=o.$watch("end",function(e,r){angular.equals(e,r)||o.browser.moveTo(o.chromosome,o.start,e,!0)}),n=o.$watch("chromosome",function(e,r){angular.equals(e,r)||o.browser.moveTo(e,o.start,o.end,!0)}),t=o.$watch("genome",function(e,r){angular.equals(e,r)||(o.genoverseToAngularWatches.forEach(function(e){e()}),o.angularToGenoverseWatches.forEach(function(e){e()}),o.browser.destroy(),delete o.browser,o.chromosome=e.example_location.chromosome,o.start=e.example_location.start,o.end=e.example_location.end,s.render())});return[t,n,e,r]},s.setGenoverseWidth=function(){var e=$(".container").width();o.browser.setWidth(e),r(angular.noop)}}],link:function(e,r,o,n,t){t(function(e){r.find("#for-tracks").append(e)}).detach(),n.render(),$(window).on("resize",n.setGenoverseWidth)}}}function t(){return{restrict:"E",require:"^genoverse",template:"",scope:{name:"=",labels:"=?",id:"=?",model:"=",modelExtra:"=?",url:"=",view:"=",viewExtra:"=?",controller:"=?",controllerExtra:"=?",resizable:"=?",autoHeight:"=?",extra:"=?"},link:function(e,r,o,n){console.log("genoverseTrack scope = ",e);var t={};t.name=e.name,t.url=e.url,t.model=e.model,t.view=e.view,e.controller&&(t.controller=e.controller),e.labels&&(t.labels=e.labels),e.id&&(t.id=e.id),e.resizable&&(t.resizable=e.resizable),e.autoHeight&&(t.autoHeight=e.autoHeight),e.modelExtra&&(t.modelExtra=e.modelExtra),e.viewExtra&&(t.viewExtra=e.viewExtra),e.controllerExtra&&(t.controllerExtra=e.controllerExtra),e.extra&&(t.extra=e.extra),console.log("genoverseTrack trackConfig = ",t),n.pushTrackConfig(t)}}}e.$inject=[],r.$inject=[],o.$inject=[],n.$inject=["$filter","$timeout"],t.$inject=[],angular.module("Genoverse",[]).filter("urlencodeSpecies",e).filter("urldecodeSpecies",r).filter("chrToUCSC",o).directive("genoverse",n).directive("genoverseTrack",t)}();
//# sourceMappingURL=/dist/angularjs-genoverse.min.js.map