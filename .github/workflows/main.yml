# This workflow will run the unit tests and create a new image on the Docker Hub.
# At least for now, the image will be created regardless of whether the tests are run successfully or not.
#
# References:
#   - https://docs.github.com/en/actions/guides/building-and-testing-python
#   - https://github.com/marketplace/actions/slack-notify

name: Building Docker containers

# Triggers the workflow on push or pull request events
on:
  push:
    paths-ignore:
      - 'jenkins/**'
      - 'kubernetes/**'
      - 'nginx/**'
      - 'openssl/**'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies and rename local_settings file
        run: |
          python -m pip install --upgrade pip
          pip install -r rnacentral/requirements.txt
          pip install -r rnacentral/requirements_dev.txt
          mv rnacentral/rnacentral/unit_test_local_settings.py rnacentral/rnacentral/local_settings.py

      - name: Run tests
        run: |
          python rnacentral/manage.py test apiv1
          python rnacentral/manage.py test export
          python rnacentral/manage.py test portal
          python rnacentral/manage.py test sequence_search

  initial-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Initial notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'Creating a new image in the Docker Hub'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true

  create-docker-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Get branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: docker build
        if: env.BRANCH_NAME != ''
        run: docker build -f Dockerfile -t rnacentral/rnacentral-webcode:${{ env.BRANCH_NAME }} .

      - name: docker push
        if: env.BRANCH_NAME != ''
        run: docker push rnacentral/rnacentral-webcode:${{ env.BRANCH_NAME }}

  final-notification:
    runs-on: ubuntu-latest
    needs: create-docker-tag
    steps:
      - uses: actions/checkout@v2

      - name: Final notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'New image created in Docker Hub'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true